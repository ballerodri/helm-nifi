---
  # Number of nifi nodes
  replicaCount: 1
  
  ## Set default image, imageTag, and imagePullPolicy.
  ## ref: https://hub.docker.com/r/apache/nifi/
  ##
  image:
    repository: apache/nifi
    tag: "1.12.1"
    pullPolicy: IfNotPresent
  
    ## Optionally specify an imagePullSecret.
    ## Secret must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    # pullSecret: myRegistrKeySecretName
  
  securityContext:
    runAsUser: 1000
    fsGroup: 1000
  
  sts:
    # Parallel podManagementPolicy for faster bootstrap and teardown. Default is OrderedReady.
    podManagementPolicy: Parallel
    AntiAffinity: hard
    hostPort: null
    pod:
      annotations:
        security.alpha.kubernetes.io/sysctls: net.ipv4.ip_local_port_range=10000 65000
        prometheus.io/scrape: "true"      
    serviceAccount:
      create: false
      #name: nifi
  
  ## Useful if using any custom secrets
  ## Pass in some secrets to use (if required)
  # secrets:
  # - name: myNifiSecret
  #   keys:
  #     - key1
  #     - key2
  #   mountPath: /opt/nifi/secret
  
  ## Useful if using any custom configmaps
  ## Pass in some configmaps to use (if required)
  # configmaps:
  #   - name: myNifiConf
  #     keys:
  #       - myconf.conf
  #     mountPath: /opt/nifi/custom-config
  
  
  properties:
    # use externalSecure for when inbound SSL is provided by nginx-ingress or other external mechanism
    externalSecure: false
    isNode: true
    httpPort: null
    httpsPort: 9443
    webProxyHost: #DNS registry and port 9443 (i.e. <dns>:9443).
    clusterPort: 11443
    clusterSecure: true
    needClientAuth: false
    provenanceStorage: "80 GB"
    siteToSite:
      secure: false
      port: 10000
    authorizer: managed-authorizer
    # use properties.safetyValve to pass explicit 'key: value' pairs that overwrite other configuration
    safetyValve:
      #nifi.variable.registry.properties: "${NIFI_HOME}/example1.properties, ${NIFI_HOME}/example2.properties"
      nifi.web.http.network.interface.default: eth0
      # listen to loopback interface so "kubectl port-forward ..." works
      nifi.web.http.network.interface.lo: lo
  
    ## Include aditional processors
    # customLibPath: "/opt/configuration_resources/custom_lib"
  
  ## Include additional libraries in the Nifi containers by using the postStart handler
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/attach-handler-lifecycle-event/
  # postStart: /opt/nifi/psql; wget -P /opt/nifi/psql https://jdbc.postgresql.org/download/postgresql-42.2.6.jar
  
  # Nifi User Authentication
  auth:
    admin: #AD user "Initial Admin Identity"
    #SSL:
    #  keystorePasswd: env:PASS
    #  truststorePasswd: env:PASS
    ldap:
      enabled: true
      host:  #Space-separated list of URLs of the LDAP servers (i.e. ldap://<hostname>:<port>).
      searchBase:  #Base DN for searching for users (i.e. CN=Users,DC=example,DC=com).
      searchFilter:  #Filter for searching for users against the User Search Base. (i.e. sAMAccountName={0}). The user specified name is inserted into '{0}'.
      admin:  #The DN of the manager that is used to bind to the LDAP server to search for users.
      pass:  #The password of the manager that is used to bind to the LDAP server to search for users.
      identityStrategy:  #Strategy to identify users. Possible values are USE_DN and USE_USERNAME. 
  
    oidc:
      enabled: false
      discoveryUrl:
      clientId:
      clientSecret:
      claimIdentifyingUser: email
  
  ## Expose the nifi service to be accessed from outside the cluster (LoadBalancer service).
  ## or access it from within the cluster (ClusterIP service). Set the service type and the port to serve it.
  ## ref: http://kubernetes.io/docs/user-guide/services/
  ##
  
  # headless service
  headless:
    type: ClusterIP
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  
  # ui service
  service:
    type: LoadBalancer
    httpPort: 8080
    httpsPort: 9443
    annotations:
      external-dns.alpha.kubernetes.io/hostname: #DNS
      external-dns.alpha.kubernetes.io/ttl: "60"
      service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: # (i.e "key=value,key=value")
    # loadBalancerIP:
    ## Load Balancer sources
    ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ##
    # loadBalancerSourceRanges:
    # - 10.10.10.0/24
    ## OIDC authentication requires "sticky" session on the LoadBalancer for JWT to work properly...but AWS doesn't like it on creation
    # sessionAffinity: ClientIP
    # sessionAffinityConfig:
    #   clientIP:
    #     timeoutSeconds: 10800
        
    # Enables additional port/ports to nifi service for internal processors
    processors:
      enabled: false
      ports:
        - name: processor01
          port: 7001
          targetPort: 7001
          #nodePort: 30701
        - name: processor02
          port: 7002
          targetPort: 7002
          #nodePort: 30702
  
  ## Configure Ingress based on the documentation here: https://kubernetes.io/docs/concepts/services-networking/ingress/
  ##
  ingress:
    enabled: false
    annotations: {}
    tls: []
    hosts: []
    path: /
    # If you want to change the default path, see this issue https://github.com/cetic/helm-nifi/issues/22
  
  # Amount of memory to give the NiFi java heap
  jvmMemory: 2g
  
  # Separate image for tailing each log separately and checking zookeeper connectivity
  sidecar:
    image: ez123/alpine-tini
    tag: latest
  
  busybox:
    image: busybox
    tag: latest
  
  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    enabled: false
  
    # When creating persistent storage, the NiFi helm chart can either reference an already-defined
    # storage class by name, such as "standard" or can define a custom storage class by specifying
    # customStorageClass: true and providing the "storageClass", "storageProvisioner" and "storageType".
    # For example, to use SSD storage on Google Compute Engine see values-gcp.yaml
    #
    # To use a storage class that already exists on the Kubernetes cluster, we can simply reference it by name.
    # For example:
    storageClass: gp2
    #
    # The default storage class is used if this variable is not set.
  
    accessModes:  [ReadWriteOnce]
    ## Storage Capacities for persistent volumes
    configStorage:
      size: 1Gi
    authconfStorage:
      size: 1Gi
    # Storage capacity for the 'data' directory, which is used to hold things such as the flow.xml.gz, configuration, state, etc.
    dataStorage:
      size: 1Gi
    # Storage capacity for the FlowFile repository
    flowfileRepoStorage:
      size: 10Gi
    # Storage capacity for the Content repository
    contentRepoStorage:
      size: 10Gi
    # Storage capacity for the Provenance repository. When changing this, one should also change the properties.provenanceStorage value above, also.
    provenanceRepoStorage:
      size: 10Gi
    # Storage capacity for nifi logs
    logStorage:
      size: 5Gi
  
  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
  
  logresources:
    requests:
      cpu: 10m
      memory: 10Mi
    limits:
      cpu: 50m
      memory: 50Mi
  
  nodeSelector: 
    role: nifi
    nodePool: cluster
  
  tolerations: 
    - key: "nifi"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
  
  initContainers: {}
    # foo-init:  # <- will be used as container name
    #   image: "busybox:1.30.1"
    #   imagePullPolicy: "IfNotPresent"
    #   command: ['sh', '-c', 'echo this is an initContainer']
    #   volumeMounts:
  #     - mountPath: /tmp/foo
  #       name: foo
  
  extraVolumeMounts: []
  
  extraVolumes: []
  
  ## Extra containers
  extraContainers: []
  
  terminationGracePeriodSeconds: 30
  
  ## Extra environment variables that will be pass onto deployment pods
  env: []
  
  ## Openshift support
  ## Use the following varables in order to enable Route and Security Context Constraint creation
  openshift:
    scc:
      enabled: false
    route:
      enabled: false
      #host: www.test.com
      #path: /nifi
  
  # ca server details
  # Setting this true would create a nifi-toolkit based ca server
  # The ca server will be used to generate self-signed certificates required setting up secured cluster
  ca:
    ## If true, enable the nifi-toolkit certificate authority
    enabled: true
    server: ""
    service:
      port: 9090
    token: sixteenCharacters
    admin:
      cn: #AD user "Initial Admin Identity"
    serviceAccount:
      create: false
      #name: nifi-ca
    openshift:
      scc:
        enabled: false
  
  # ------------------------------------------------------------------------------
  # Zookeeper:
  # ------------------------------------------------------------------------------
  zookeeper:
    ## If true, install the Zookeeper chart
    ## ref: https://github.com/kubernetes/charts/tree/master/incubator/zookeeper
    enabled: false
    ## If the Zookeeper Chart is disabled a URL and port are required to connect
    url: "zk-zookeeper-headless"
    port: 2181
  
  # ------------------------------------------------------------------------------
  # Nifi registry:
  # ------------------------------------------------------------------------------
  registry:
    ## If true, install the Nifi registry
    enabled: false
    url: "rg-nifi-registry"
    port: 80
    ## Add values for the nifi-registry here
    ## ref: https://github.com/dysnix/charts/blob/master/nifi-registry/values.yaml